<project name="parsingphase/takeAticket" default="test-all" basedir=".">

    <property file="build.properties"/> <!-- local overrides -->
    <property file="build.dist.properties"/> <!-- defaults -->

    <!-- Single phing command in case -f is missed (phing and ant both expect build.xml) -->
    <target name="test-all"
            description="Run all tests with phing">
        <echo message="Use vendor/bin/phing -f phing.xml [command] to run phing directly"/>
        <exec command="vendor/bin/phing -f phing.xml test-all" failonerror="true" />
    </target>

    <!-- Installation and deployment tasks all use ant for greater reliability -->
    <target name="deploy-latest"
            description="Pull latest code from master and redeploy"
            depends="git-pull,deploy-current">
    </target>

    <target name="deploy-latest-dev"
            description="Pull latest code from master and redeploy for development"
            depends="git-pull,deploy-current-dev">
    </target>

    <target name="deploy-current"
            description="(Re)Deploy currently present project"
            depends="set-symfony-env-prod,composer-install,npm-install,build-prod,set-var-dir-access,acl-warning">
        <antcall target="clear-cache"/><!-- explicit call at *end* of deploy -->
    </target>

    <target name="deploy-current-dev"
            description="(Re)Deploy currently present project for development"
            depends="set-symfony-env-dev,composer-install-dev,npm-install,clear-cache">
    </target>

    <target name="build-prod"
            description="(Re)Build project with currently installed dependencies"
            depends="set-symfony-env-prod,clear-cache">
    </target>

    <target name="build-dev" description="(Re)Build project with currently installed dependencies for development"
            depends="set-symfony-env-dev,clear-cache">
    </target>

    <target name="set-symfony-env-dev"
            description="Set subsequent symfony command to env=dev">
        <property name="symfony.env" value="dev"/>
    </target>

    <target name="set-symfony-env-prod"
            description="Set subsequent symfony command to env=prod">
        <property name="symfony.env" value="prod"/>
    </target>

    <target name="composer-install">
        <exec executable="${composer.exe}" failonerror="true">
            <env key="SYMFONY_ENV" value="prod"/>
            <arg value="install"/>
            <arg value="--no-dev"/>
        </exec>
    </target>

    <target name="composer-install-dev">
        <exec executable="${composer.exe}" failonerror="true">
            <arg value="install"/>
        </exec>
    </target>

    <target name="npm-install">
        <exec executable="${npm.exe}" failonerror="true">
            <arg value="install"/>
        </exec>
    </target>

    <target name="clear-cache"
            description="Clear Symfony caches (default: prod)"
            depends="set-symfony-env-prod">
        <exec executable="${php.exe}" dir="${basedir}" failonerror="true">
            <arg value="bin/console"/>
            <arg value="cache:clear"/>
            <arg value="--env=${symfony.env}"/>
        </exec>
    </target>

    <target name="git-pull" description="Pull master from mainline repo">
        <exec executable="${git.exe}" dir="${basedir}" failonerror="true">
            <arg value="pull"/>
            <arg value="origin"/>
            <arg value="master"/>
        </exec>
    </target>

    <target name="acl-warning">
        <echo message="Please check privileges on var directories"/>
        <echo message="See: http://symfony.com/doc/current/book/installation.html#checking-symfony-application-configuration-and-setup"/>
        <echo message=" (setfacl is in the 'acl' package on ubuntu)"/>
        <echo message="This is not required if you are running the PHP internal server for development"/>
    </target>

    <target name="start-dev-server" description="Start PHP internal server for development"
            depends="set-symfony-env-dev">
        <exec executable="${php.exe}">
            <arg value="bin/console"/>
            <arg value="server:run"/>
            <arg value="--env=${symfony.env}"/>
        </exec>
    </target>

    <target name="check-acl-method" depends="switch-acl-method" if="autoFacl">
        <exec executable="which" outputproperty="which-set-facl">
            <arg value="setfacl"/>
        </exec>
        <condition property="set-var-dir-access-by-chmod-plus-a">
            <equals arg1="${which-set-facl}" arg2="1"/>
        </condition>
        <condition property="accessCtrlCmdSetfacl">
            <equals arg1="${which-set-facl}" arg2="0"/>
        </condition>
    </target>

    <target name="switch-acl-method">
        <condition property="set-var-dir-access-by-chmod-plus-a">
            <equals arg1="${acl.method}" arg2="chmod+a"/>
        </condition>
        <condition property="accessCtrlCmdSetfacl">
            <equals arg1="${acl.method}" arg2="setfacl"/>
        </condition>
        <condition property="autoFacl">
            <equals arg1="${acl.method}" arg2="auto"/>
        </condition>
    </target>

    <target name="set-var-dir-access-by-chmod-plus-a" if="set-var-dir-access-by-chmod-plus-a"
            depends="check-acl-method">
        <exec executable="chmod">
            <arg value="+a"/>
            <arg value="${webserver.user} allow delete,write,append,file_inherit,directory_inherit"/>
            <arg value="var"/>
            <arg value="web/uploads"/>
        </exec>
        <exec executable="chmod">
            <arg value="+a"/>
            <arg value="${user.name} allow delete,write,append,file_inherit,directory_inherit"/>
            <arg value="var"/>
            <arg value="web/uploads"/>
        </exec>
    </target>

    <target name="set-var-dir-access-by-acl" if="accessCtrlCmdSetfacl" depends="check-acl-method">
        <exec executable="setfacl">
            <arg value="-R"/>
            <arg value="-m"/>
            <arg value="u:${webserver.user}:rwX"/>
            <arg value="-m"/>
            <arg value="u:${user.name}:rwX"/>
            <arg value="var"/>
            <arg value="web/uploads"/>
        </exec>
        <exec executable="setfacl">
            <arg value="-dR"/>
            <arg value="-m"/>
            <arg value="u:${webserver.user}:rwX"/>
            <arg value="-m"/>
            <arg value="u:${user.name}:rwX"/>
            <arg value="var"/>
            <arg value="web/uploads"/>
        </exec>
    </target>

    <target name="set-var-dir-access"
            description="Ensure that appropriate var (cache,log) directories have correct ACLs"
            depends="set-var-dir-access-by-acl,set-var-dir-access-by-chmod-plus-a">
    </target>
</project>
